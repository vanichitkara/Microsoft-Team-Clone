{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Microsoft Teams Clone (Local)/Microsoft Teams Video Call/client/src/components/VideoPlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Container, Grid, Typography, Paper, makeStyles, Button } from '@material-ui/core';\nimport { Mic, Videocam } from '@material-ui/icons';\nimport { SocketContext } from '../Context';\nimport '../video_styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  video: {\n    width: '400px',\n    [theme.breakpoints.down('xs')]: {\n      width: '300px'\n    }\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%'\n    }\n  },\n  buttonGridContainer: {\n    width: '200%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column'\n    }\n  },\n  margin: {\n    marginTop: 10\n  },\n  padding: {\n    padding: 10\n  },\n  paper: {\n    padding: '10px',\n    border: '2px',\n    margin: '10px'\n  }\n}));\n\nconst VideoPlayer = () => {\n  _s();\n\n  const {\n    name,\n    callAccepted,\n    myVideo,\n    userVideo,\n    callEnded,\n    stream,\n    call,\n    toggleMic,\n    toggleVideo\n  } = useContext(SocketContext);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.gridContainer,\n      children: [stream && /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: name || 'Name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            playsInline: true,\n            muted: true,\n            ref: myVideo,\n            autoPlay: true,\n            className: classes.video\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: classes.buttonGridContainer,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              className: classes.padding,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                startIcon: /*#__PURE__*/_jsxDEV(Mic, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 84\n                }, this),\n                onClick: () => toggleMic(),\n                className: classes.margin,\n                children: \"Mic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              className: classes.padding,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                startIcon: /*#__PURE__*/_jsxDEV(Videocam, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 84\n                }, this),\n                onClick: () => toggleVideo(),\n                className: classes.margin,\n                children: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: call.name || 'Name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            playsInline: true,\n            ref: userVideo,\n            autoPlay: true,\n            className: classes.video\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: classes.buttonGridContainer,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              className: classes.padding,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(Mic, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 74\n                }, this),\n                fullWidth: true,\n                onClick: () => toggleMic(),\n                className: classes.margin,\n                children: \"Mic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              className: classes.padding,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(Videocam, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 74\n                }, this),\n                fullWidth: true,\n                onClick: () => toggleVideo(),\n                className: classes.margin,\n                children: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoPlayer, \"xz3YeMGDFTH/4ylythuqW3ETe68=\", false, function () {\n  return [useStyles];\n});\n\n_c = VideoPlayer;\nexport default VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["/Users/mac/Desktop/Microsoft Teams Clone (Local)/Microsoft Teams Video Call/client/src/components/VideoPlayer.jsx"],"names":["React","useContext","Container","Grid","Typography","Paper","makeStyles","Button","Mic","Videocam","SocketContext","useStyles","theme","root","display","flexDirection","video","width","breakpoints","down","gridContainer","justifyContent","buttonGridContainer","margin","marginTop","padding","paper","border","VideoPlayer","name","callAccepted","myVideo","userVideo","callEnded","stream","call","toggleMic","toggleVideo","classes"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Container, Grid, Typography, Paper, makeStyles, Button } from '@material-ui/core';\nimport { Mic, Videocam } from '@material-ui/icons';\n\nimport { SocketContext } from '../Context';\nimport '../video_styles.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  video: {\n    width: '400px',\n    [theme.breakpoints.down('xs')]: {\n      width: '300px',\n    },\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  buttonGridContainer: {\n    width: '200%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  margin: {\n    marginTop: 10,\n  },\n  padding: {\n    padding: 10,\n  },\n  paper: {\n    padding: '10px',\n    border: '2px',\n    margin: '10px',\n  },\n}));\n\nconst VideoPlayer = () => {\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call, toggleMic, toggleVideo } = useContext(SocketContext);\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.root}>\n      <Grid container className={classes.gridContainer}>\n        {stream && (\n          <Paper className={classes.paper}>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\n              <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n              <Grid container className={classes.buttonGridContainer}>\n                <Grid item xs={12} md={6} className={classes.padding}>\n                  <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Mic fontSize=\"large\" />} onClick={() => toggleMic()} className={classes.margin}>\n                      Mic\n                  </Button>\n                </Grid>\n                <Grid item xs={12} md={6} className={classes.padding}>\n                  <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Videocam fontSize=\"large\" />} onClick={() => toggleVideo()} className={classes.margin}>\n                      Video\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n        {callAccepted && !callEnded && (\n          <Paper className={classes.paper}>\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\n              <video playsInline ref={userVideo} autoPlay className={classes.video} />\n              <Grid container className={classes.buttonGridContainer}>\n                <Grid item xs={12} md={6} className={classes.padding}>\n                  <Button variant=\"contained\" color=\"primary\" startIcon={<Mic fontSize=\"large\" />} fullWidth onClick={() => toggleMic()} className={classes.margin}>\n                      Mic\n                  </Button>\n                </Grid>\n                <Grid item xs={12} md={6} className={classes.padding}>\n                  <Button variant=\"contained\" color=\"primary\" startIcon={<Videocam fontSize=\"large\" />} fullWidth onClick={() => toggleVideo()} className={classes.margin}>\n                      Video\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default VideoPlayer;\n"]},"metadata":{},"sourceType":"module"}